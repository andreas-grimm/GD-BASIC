10 REM LINKED LIST DEMO
20 REM ARRAY INDICES ARE ZERO-BASED
30 OPTION BASE 0
40 REM ARRAY A HAS 9 ROWS AND 4 COLUMNS AND IS THE HEAP
50 REM COLUMN 0 IS IDENTIFIER
60 REM COLUMN 1 IS QUANTITY
70 REM COLUMN 2 IS UNIT PRICE
80 REM COLUMN 3 IS NEXT
90 REM F IS HEAD OF FREE LIST IN HEAP
100 REM H IS HEAD OF LINKED LIST OF NODES
110 REM N IS NUMBER OF ROWS IN ARRAY A (NUMBER OF BLOCKS IN HEAP)
120 LET N=9
130 DIM A(8,3)
140 REM START OF MAIN
150 REM ******* INITIALIZE HEAP *******
160 GOSUB 2090
170 REM ******* SET HEAD TO NULL *******
180 LET H=-1
190 REM ******* SHOW MENU *********
200 GOSUB 2480
210 ON C GOTO 230,270,370,840,540,680,930,980
220 REM
230 REM ******* SHOW LIST *********
240 REM
250 GOSUB 1630
260 GOTO 190
270 REM ******* LOOKUP A NODE IN LIST *********
280 PRINT "WHAT IS THE NODE ID";
290 INPUT W
300 GOSUB 1130
310 IF T=-1 THEN 340
320 GOSUB 1250
330 GOTO 190
340 PRINT "NODE ";W;" NOT FOUND"
350 GOTO 190
360 REM
370 REM ******* APPEND A NODE TO LIST *********
380 REM
390 PRINT "WHAT IS THE NODE ID";
400 INPUT I9
410 PRINT "WHAT IS THE QUANTITY";
420 INPUT Q9
430 PRINT "WHAT IS THE PRICE";
440 INPUT P9
450 GOSUB 1730
460 ON R+1 GOTO 490,510,470
470 PRINT "ID ";I9;" IS ALREADY IN THE LIST"
480 GOTO 820
490 PRINT "OUT OF MEMORY"
500 GOTO 820
510 PRINT "APPEND OF ID=";I9;", QUANTITY=";Q9;", PRICE=";P9;"SUCCESSFUL"
520 GOTO 190
530 REM
540 REM ******* UPDATE QUANTITY OF NODE IN LIST *********
550 REM
560 PRINT "WHAT IS THE NODE ID";
570 INPUT I0
580 PRINT "WHAT IS THE NEW QUANTITY";
590 INPUT Q0
600 PRINT "UPDATE ID=";I0;" QUANTITY=";Q0;
610 GOSUB 1350
620 IF R=1 THEN 650
630 PRINT " FAILED"
640 GOTO 660
650 PRINT "SUCCEEDED"
660 GOTO 190
670 REM
680 REM ******* UPDATE PRICE OF NODE IN LIST *********
690 REM
700 PRINT "WHAT IS THE NODE ID";
710 INPUT I0
720 PRINT "WHAT IS THE NEW PRICE";
730 INPUT P0
740 GOSUB 1490
750 PRINT "UPDATE ID=";I0;" PRICE=";P0;
760 IF R=1 THEN 790
770 PRINT " FAILED"
780 GOTO 800
790 PRINT " SUCCEEDED"
800 GOTO 190
810 REM
820 GOTO 190
830 REM
840 REM ******* DELETE A NODE FROM LIST *********
850 REM
860 PRINT "WHAT IS THE NODE ID";
870 INPUT I9
880 GOSUB 2220
890 IF R=1 THEN 900
894 PRINT "NODE ";I9;" NOT FOUND"
898 GOTO 190
900 PRINT "DELETE OF ID=";I9;" SUCCESSFUL"
910 GOTO 190
920 REM
930 REM ******* RAW DUMP OF HEAP INFORMATION (DEBUG) ********
940 REM
950 GOSUB 1030
960 GOTO 190
970 REM
980 REM ******* QUIT ********
990 REM
1000 STOP
1010 REM END MAIN
1020 REM
1030 REM ******************************
1040 REM * DUMP_RAW_STORAGE PROCEDURE *
1050 REM ******************************
1060 FOR I=0 TO N-1
1070 PRINT I;":";A(I,0);",";A(I,1);
1080 PRINT ",";A(I,2);",";A(I,3)
1090 NEXT I
1100 PRINT "HEAD IS";H
1110 PRINT "FREE IS";F
1120 RETURN
1130 REM **********************
1140 REM * FIND_NODE FUNCTION *
1150 REM **********************
1160 REM W IS THE IDENTIFER WE WANT
1170 REM RETURNS T WHICH IS ARRAY INDEX OF NODE
1180 REM WITH ID W, OR -1 IF NODE NOT FOUND
1190 LET T=H
1200 IF T=-1 THEN 1240
1210 IF A(T,0)=W THEN 1240
1220 LET T=A(T,3)
1230 GOTO 1200
1240 RETURN
1250 REM *****************
1260 REM * SHOW ONE NODE *
1270 REM *****************
1280 REM T IS THE POINTER TO THE NODE WHOSE DATA WILL BE DISPLAYED
1290 PRINT "ITEM FOUND IN SLOT";T
1300 PRINT "IDENTIFIER:";A(T,0)
1310 PRINT "QUANTITY  :";A(T,1)
1320 PRINT "UNIT PRICE:";A(T,2)
1330 PRINT "NEXT      :";A(T,3)
1340 RETURN
1350 REM ***********************
1360 REM * UPDATE_QTY FUNCTION *
1370 REM ***********************
1380 REM I0 IS ID
1390 REM Q0 IS QUANTITY
1400 REM R IS RETURN (0 IS FALSE, 1 IS TRUE)
1410 LET W=I0
1420 GOSUB 1130
1430 IF T=-1 THEN 1470
1440 LET A(T,1)=Q0
1450 LET R=1
1460 GOTO 1480
1470 LET R=0
1480 RETURN
1490 REM *************************
1500 REM * UPDATE_PRICE FUNCTION *
1510 REM *************************
1520 REM I0 IS ID
1530 REM P0 IS PRICE
1540 REM R IS RETURN (0 IS FALSE, 1 IS TRUE)
1550 LET W=I0
1560 GOSUB 1130
1570 IF T=-1 THEN 1610
1580 LET A(T,2)=P0
1590 LET R=1
1600 GOTO 1620
1610 LET R=0
1620 RETURN
1630 REM *************************
1640 REM * PRINT_NODES PROCEDURE *
1650 REM *************************
1660 REM T0 IS TEMP
1670 LET T0=H
1680 IF T0=-1 THEN 1720
1690 PRINT A(T0,0),A(T0,1),A(T0,2)
1700 LET T0=A(T0,3)
1710 GOTO 1680
1720 RETURN
1730 REM ***************
1740 REM * APPEND_NODE *
1750 REM ***************
1760 REM I9 IS NEW IDENDIFIER
1770 REM Q9 IS NEW QUANTITY
1780 REM P9 IS NEW UNIT PRICE
1790 REM R IS RETURN (1 IS SUCCESS, 0 IS OOM, 2 IS DUPLICATE KEY)
1800 REM T1 IS TEMP1
1810 REM T2 IS TEMP2
1820 IF F<>-1 THEN 1850
1830 LET R=0
1840 GOTO 2080
1850 IF H=-1 THEN 2040
1860 LET T2=-1
1870 LET T1=H
1880 IF A(T1,0)<>I9 THEN 1910
1890 LET R=2
1900 GOTO 2080
1910 LET T2=T1
1920 LET T1=A(T1,3)
1930 IF T1=-1 THEN 1950
1940 GOTO 1880
1950 LET T1=F
1960 LET F=A(F,3)
1970 LET A(T2,3)=T1
1980 LET A(T1,0)=I9
1990 LET A(T1,1)=Q9
2000 LET A(T1,2)=P9
2010 LET A(T1,3)=-1
2020 LET R=1
2030 GOTO 2080
2040 LET T1=F
2050 LET F=A(F,3)
2060 LET H=T1
2070 GOTO 1980
2080 RETURN
2090 REM **********************
2100 REM * INITIALIZE_STORAGE *
2110 REM **********************
2120 REM N IS THE NUMBER OF ELEMENTS IN ARRAY A WHICH IS THE HEAP
2130 FOR I=0 TO N-1
2140 LET A(I,0)=-1
2150 LET A(I,1)=-1
2160 LET A(I,2)=-1
2170 LET A(I,3)=I+1
2180 NEXT I
2190 LET A(N-1,3)=-1
2200 LET F=0
2210 RETURN
2220 REM ***************
2230 REM * DELETE_NODE *
2240 REM ***************
2250 REM I9 IS IDENTIFIER OF NODE TO DELETE
2260 REM R IS RETURN (1 IS SUCCESS, 0 IS FAILURE)
2270 REM T1 IS TEMP1
2280 REM T2 IS TEMP2
2290 REM EACH ROW IS DATA FOR ONE NODE
2300 IF H=-1 THEN 2460
2310 LET T2=-1
2320 LET T1=H
2330 IF A(T1,0)=I9 THEN 2380
2340 LET T2=T1
2350 LET T1=A(T1,3)
2360 IF T1<>-1 THEN 2330
2370 GOTO 2460
2380 IF T2=-1 THEN 2410
2390 LET A(T2,3)=A(T1,3)
2400 GOTO 2420
2410 LET H=A(T1,3)
2420 LET A(T1,3)=F
2430 LET F=T1
2440 LET R=1
2450 GOTO 2470
2460 LET R=0
2470 RETURN
2480 REM ***********************************
2490 REM * SHOW MAIN MENU AND GET A CHOICE *
2500 REM ***********************************
2510 PRINT "    LINKED LIST MANAGER"
2520 PRINT
2530 PRINT "1.  SHOW LIST"
2540 PRINT "2.  LOOKUP A NODE IN LIST"
2550 PRINT "3.  APPEND A NODE TO LIST"
2560 PRINT "4.  DELETE A NODE FROM LIST"
2570 PRINT "5.  UPDATE QUANTITY OF NODE IN LIST"
2580 PRINT "6.  UPDATE PRICE OF NODE IN LIST"
2590 PRINT "7.  RAW DUMP OF HEAP INFORMATION (DEBUG)"
2600 PRINT "8.  QUIT"
2610 PRINT
2620 PRINT "WHAT DO YOU WANT TO DO";
2630 INPUT C
2640 IF INT(C)=C THEN 2680
2650 PRINT "INVALID INPUT!"
2660 PRINT
2670 GOTO 2510
2680 IF C<1 THEN 2650
2690 IF C>8 THEN 2650
2700 RETURN
2710 END
